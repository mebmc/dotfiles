# Set true color
set  -g default-terminal "screen-256color"
set -ag terminal-overrides ",alacritty:RGB,term-kitty:RGB,xterm-256color:RGB"

set-option -g update-environment "DISPLAY WAYLAND_DISPLAY SSH_AUTH_SOCK"

# Set mouse on
set -g mouse on


# Other settings
set -g detach-on-destroy off
set -g status-keys vi
set -g escape-time 20
set -g history-limit 10000
set -g set-clipboard on
set -g status-position top

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Automatically set window title
set-option -g status-interval 1
set-option -g automatic-rename on
set-option -g automatic-rename-format '#{b:pane_current_path}'
set-option -g renumber-windows on

# Set prefix
unbind C-b
set -g prefix C-f
bind-key C-f send-prefix

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1
set-window-option -g pane-base-index 1
set-option -g renumber-windows on

# Keybinds

unbind C-h
unbind C-j
unbind C-k
unbind C-l

## Reload config
bind-key R source-file ~/.config/tmux/tmux.conf

## Jump to general session
unbind g
bind-key -r g switch-client -t gen

# Open panes in current directory
bind-key '"'    split-window -c "#{pane_current_path}"
bind-key '%'    split-window -h -c "#{pane_current_path}"
bind-key '\'    split-window -l 20% -c "#{pane_current_path}"
bind-key 'C-\'  split-window -l 50% -c "#{pane_current_path}"
bind-key '|'    split-window -h -l 50% -c "#{pane_current_path}"

# Resize panes

bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r H resize-pane -L 5
bind-key -r L resize-pane -R 5

bind-key -r C-j swap-pane -D
bind-key -r C-k swap-pane -U
bind-key -r C-h swap-window -t -1\; select-window -t -1
bind-key -r C-l swap-window -t +1\; select-window -t +1

# Mark panes

bind-key = select-pane -m
bind-key - swap-pane \; switch-client -t'{marked}' \; select-pane -M
bind-key _ break-pane
bind-key + join-pane

## Session create/search
# bind-key -r Tab last-window
bind-key f last-window
bind-key F display-popup -h 75% -w 75% -E "~/.config/tmux/scripts/tmux-window-search"
bind-key C-f display-popup -h 75% -w 75% -E "~/.config/tmux/scripts/tmux-windowizer"

bind-key s switch-client -l
bind-key S display-popup -h 75% -w 75% -E "~/.config/tmux/scripts/tmux-session-search"
bind-key C-s display-popup -h 75% -w 75% -E "~/.config/tmux/scripts/tmux-sessionizer"

# pet snippets
bind-key 'Y' display-popup -h 75% -w 75% -E "~/.config/tmux/scripts/tmux-pet-new-snippet"

# Scratch terminal
bind-key -r 'e' run-shell -b "~/.config/tmux/scripts/tmux-toggle-term float"

bind-key C-u display-popup -h 90% -w 90% -E "spotify_player"
bind-key u display-popup -h 90% -w 90% -E "spt"

# Switch windows
bind-key c new-window
bind-key -n C-h previous-window
bind-key -n C-l next-window

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"
bind-key -n 'M-h' if-shell "$is_vim" { send-keys M-h } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
bind-key -n 'M-j' if-shell "$is_vim" { send-keys M-j } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
bind-key -n 'M-k' if-shell "$is_vim" { send-keys M-k } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
bind-key -n 'M-l' if-shell "$is_vim" { send-keys M-l } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }
bind-key 'h' if-shell "$is_vim" { send-keys M-h } { if-shell -F '#{pane_at_left}'   {} { select-pane -L } }
bind-key 'j' if-shell "$is_vim" { send-keys M-j } { if-shell -F '#{pane_at_bottom}' {} { select-pane -D } }
bind-key 'k' if-shell "$is_vim" { send-keys M-k } { if-shell -F '#{pane_at_top}'    {} { select-pane -U } }
bind-key 'l' if-shell "$is_vim" { send-keys M-l } { if-shell -F '#{pane_at_right}'  {} { select-pane -R } }

bind-key -T copy-mode-vi 'M-h' if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind-key -T copy-mode-vi 'M-j' if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind-key -T copy-mode-vi 'M-k' if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind-key -T copy-mode-vi 'M-l' if-shell -F '#{pane_at_right}'  {} { select-pane -R }
bind-key -T copy-mode-vi 'h' if-shell -F '#{pane_at_left}'   {} { select-pane -L }
bind-key -T copy-mode-vi 'j' if-shell -F '#{pane_at_bottom}' {} { select-pane -D }
bind-key -T copy-mode-vi 'k' if-shell -F '#{pane_at_top}'    {} { select-pane -U }
bind-key -T copy-mode-vi 'l' if-shell -F '#{pane_at_right}'  {} { select-pane -R }

# Set vi-mode
set-window-option -g mode-keys vi

# Set vi-copy

unbind -T copy-mode-vi MouseDragEnd1Pane
bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-selection

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
bind-key -T copy-mode-vi y send-keys -X copy-selection-and-cancel

# Plugin config
set -g @plugin 'tmux-plugins/tpm'

set -g @plugin "mebmc/tokyo-night-tmux"
set -g @tokyo-night-tmux_window_id_style hsquare
set -g @tokyo-night-tmux_pane_id_style fsquare
set -g @tokyo-night-tmux_zoom_id_style dsquare


set -g @plugin 'nyuyuyu/tmux-pet'
set -g @pet-new-pane-key 'y'

# set -g @plugin 'tmux-plugins/tmux-sensible'

# set -g @plugin 'tmux-plugins/tmux-logging'
# set -g @logging_key "P"
# set -g @screen-capture-key "y"
# set -g @save-complete-history-key "Y"
# set -g @logging-path "$HOME/.local/state/tmux"
# set -g @screen-capture-path "$HOME/.local/state/tmux"
# set -g @save-complete-history-path "$HOME/.local/state/tmux"


# set -g @plugin 'tmux-plugins/tmux-continuum'
# set -g @continuum-restore 'on'

# set -g @plugin 'tmux-plugins/tmux-yank'

set -g @plugin 'wfxr/tmux-fzf-url'
set -g @fzf-url-fzf-options '-w 75% -h 25% --multi -0 --no-preview --border'
set -g @fzf-url-bind 'g'

# set -g @plugin 'tmux-plugins/tmux-sessionist'
# set -g @sessionist-alternate "S"
# set -g @sessionist-goto "G"

set -g @plugin 'MunifTanjim/tmux-suspend'

TMUX_FZF_ORDER="window|session|pane|command|keybinding|clipboard|process"

run '~/.tmux/plugins/tpm/tpm'
